{
	"info": {
		"_postman_id": "dfdfa552-596f-4c44-bc8e-a30f3aaabe1f",
		"name": "VerazDb - Tasks Backend API",
		"description": "Colecci√≥n de Postman para la API de Tasks Backend con endpoints optimizados",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14082102"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Sign-in",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {",
									"    const responseJson = pm.response.json();",
									"    ",
									"    if (responseJson && responseJson.data && responseJson.data.token) {",
									"        pm.collectionVariables.set(\"jwt_token\", responseJson.data.token);",
									"        console.log(\"Token JWT guardado:\", responseJson.data.token);",
									"    } else {",
									"        console.log(\"No se encontr√≥ 'token' en la respuesta JSON.\");",
									"    }",
									"} catch (e) {",
									"    console.error(\"Error al procesar la respuesta JSON:\", e);",
									"}",
									"",
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"usernameOrEmail\": \"carava\",\n    \"password\": \"Abc123456*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/sign-in",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"sign-in"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign-up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {",
									"    const responseJson = pm.response.json();",
									"    ",
									"    if (responseJson && responseJson.data && responseJson.data.id) {",
									"        pm.collectionVariables.set(\"user_id\", responseJson.data.id);",
									"        console.log(\"User ID guardado:\", responseJson.data.id);",
									"    } else {",
									"        console.log(\"No se encontr√≥ 'id' en la respuesta JSON.\");",
									"    }",
									"} catch (e) {",
									"    console.error(\"Error al procesar la respuesta JSON:\", e);",
									"}",
									"",
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"nuevo_usuario\",\n    \"email\": \"nuevo@email.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"Juan\",\n    \"lastName\": \"P√©rez\",\n    \"isActive\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/auth/sign-up",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"sign-up"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Auth Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/auth/check-status",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"check-status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üë• Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/users?page=0&size=10&sortBy=username&sortDirection=desc&search=jmvelez",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "sortBy",
									"value": "username"
								},
								{
									"key": "sortDirection",
									"value": "desc"
								},
								{
									"key": "search",
									"value": "jmvelez"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"nuevo_usuario\",\n    \"email\": \"nuevo@email.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"Juan\",\n    \"lastName\": \"P√©rez\",\n    \"isActive\": true,\n    \"roles\": [\"USER\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"jmvelez\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/users/{{user_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üë§ Persons",
			"item": [
				{
					"name": "Get All Persons",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/persons?page=0&size=10&sort=firstName&direction=asc&search=amanda",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"persons"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "sort",
									"value": "firstName"
								},
								{
									"key": "direction",
									"value": "asc"
								},
								{
									"key": "search",
									"value": "amanda"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Persons Availables",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/persons?page=0&size=10&sort=firstName&direction=asc&search=amanda",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"persons"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "sort",
									"value": "firstName"
								},
								{
									"key": "direction",
									"value": "asc"
								},
								{
									"key": "search",
									"value": "amanda"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Person by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/persons/{{person_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"persons",
								"{{person_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {",
									"    const responseJson = pm.response.json();",
									"    ",
									"    if (responseJson && responseJson.data && responseJson.data.id) {",
									"        pm.collectionVariables.set(\"person_id\", responseJson.data.id);",
									"        console.log(\"Person ID guardado:\", responseJson.data.id);",
									"    } else {",
									"        console.log(\"No se encontr√≥ 'id' en la respuesta JSON.\");",
									"    }",
									"} catch (e) {",
									"    console.error(\"Error al procesar la respuesta JSON:\", e);",
									"}",
									"",
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"identType\": \"CC\",\n    \"identNumber\": \"1234567890\",\n    \"firstName\": \"Mar√≠a\",\n    \"lastName\": \"Garc√≠a\",\n    \"birthDate\": \"1990-05-15\",\n    \"gender\": \"F\",\n    \"nationality\": \"Colombiana\",\n    \"mobile\": \"3001234567\",\n    \"email\": \"maria.garcia@email.com\",\n    \"address\": \"Calle 123 #45-67\",\n    \"city\": \"Bogot√°\",\n    \"country\": \"Colombia\",\n    \"postalCode\": \"110111\",\n    \"notes\": \"Persona para pruebas\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/persons",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"persons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Mar√≠a Elena\",\n    \"lastName\": \"Garc√≠a L√≥pez\",\n    \"email\": \"maria.actualizada@email.com\",\n    \"mobile\": \"3009876543\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/persons/{{person_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"persons",
								"{{person_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Person",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/persons/{{person_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"persons",
								"{{person_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üè¢ Clients",
			"item": [
				{
					"name": "Get All Clients",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/clients?page=0&size=10&sort=companyName&direction=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"clients"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "sort",
									"value": "companyName"
								},
								{
									"key": "direction",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Client by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/clients/{{client_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"clients",
								"{{client_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {",
									"    const responseJson = pm.response.json();",
									"    ",
									"    if (responseJson && responseJson.data && responseJson.data.id) {",
									"        pm.collectionVariables.set(\"client_id\", responseJson.data.id);",
									"        console.log(\"Client ID guardado:\", responseJson.data.id);",
									"    } else {",
									"        console.log(\"No se encontr√≥ 'id' en la respuesta JSON.\");",
									"    }",
									"} catch (e) {",
									"    console.error(\"Error al procesar la respuesta JSON:\", e);",
									"}",
									"",
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"personId\": \"{{person_id}}\",\n    \"clientCode\": \"CLI001\",\n    \"type\": \"CORPORATE\",\n    \"category\": \"VIP\",\n    \"source\": \"Web\",\n    \"companyName\": \"Tech Solutions S.A.\",\n    \"companyWebsite\": \"https://techsolutions.com\",\n    \"companyIndustry\": \"Tecnolog√≠a\",\n    \"contactPerson\": \"Carlos Rodr√≠guez\",\n    \"contactPosition\": \"Gerente de TI\",\n    \"taxId\": \"900123456-7\",\n    \"creditLimit\": 10000000,\n    \"currency\": \"COP\",\n    \"paymentTerms\": \"30 d√≠as\",\n    \"paymentMethod\": \"Transferencia bancaria\",\n    \"notes\": \"Cliente importante con proyectos de alto valor\",\n    \"preferences\": \"Atenci√≥n personalizada, reportes mensuales\",\n    \"tags\": \"VIP, recurrente, tecnolog√≠a\",\n    \"rating\": 5,\n    \"status\": \"ACTIVE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/clients",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"companyName\": \"Tech Solutions Actualizada S.A.\",\n    \"contactPerson\": \"Ana Mar√≠a L√≥pez\",\n    \"contactPosition\": \"Directora de Proyectos\",\n    \"rating\": 5,\n    \"notes\": \"Cliente actualizado con nuevos requerimientos\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/clients/{{client_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"clients",
								"{{client_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/clients/{{client_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"clients",
								"{{client_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üë∑ Employees",
			"item": [
				{
					"name": "Get All Employees",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/employees?page=0&size=10&sort=employeeCode&direction=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"employees"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "sort",
									"value": "employeeCode"
								},
								{
									"key": "direction",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Employee by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/employees/{{employee_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employees",
								"{{employee_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {",
									"    const responseJson = pm.response.json();",
									"    ",
									"    if (responseJson && responseJson.data && responseJson.data.id) {",
									"        pm.collectionVariables.set(\"employee_id\", responseJson.data.id);",
									"        console.log(\"Employee ID guardado:\", responseJson.data.id);",
									"    } else {",
									"        console.log(\"No se encontr√≥ 'id' en la respuesta JSON.\");",
									"    }",
									"} catch (e) {",
									"    console.error(\"Error al procesar la respuesta JSON:\", e);",
									"}",
									"",
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"personId\": \"{{person_id}}\",\n    \"employeeCode\": \"EMP001\",\n    \"position\": \"Desarrollador Senior\",\n    \"department\": \"Tecnolog√≠a\",\n    \"supervisorId\": null,\n    \"hireDate\": \"2023-01-15\",\n    \"terminationDate\": null,\n    \"salary\": 5000000,\n    \"currency\": \"COP\",\n    \"employmentType\": \"FULL_TIME\",\n    \"status\": \"ACTIVE\",\n    \"workEmail\": \"empleado@empresa.com\",\n    \"workMobile\": \"3001234567\",\n    \"workLocation\": \"Oficina Bogot√°\",\n    \"workSchedule\": \"Lunes a Viernes 8:00-17:00\",\n    \"skills\": \"Java, Spring Boot, React, PostgreSQL\",\n    \"certifications\": \"Oracle Certified Professional\",\n    \"education\": \"Ingeniero de Sistemas - Universidad Nacional\",\n    \"benefits\": \"Seguro m√©dico, bonos de productividad\",\n    \"notes\": \"Empleado destacado con excelente rendimiento\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employees",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Employee",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"position\": \"Desarrollador Lead\",\n    \"department\": \"Tecnolog√≠a\",\n    \"salary\": 6000000,\n    \"workEmail\": \"empleado.actualizado@empresa.com\",\n    \"skills\": \"Java, Spring Boot, React, PostgreSQL, Docker, Kubernetes\",\n    \"notes\": \"Empleado promovido a Lead Developer\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/employees/{{employee_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employees",
								"{{employee_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Employee",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/employees/{{employee_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"employees",
								"{{employee_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üë§ Profile",
			"item": [
				{
					"name": "Get My Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Profile Exists",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/profile/exists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"profile",
								"exists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create My Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {",
									"    const responseJson = pm.response.json();",
									"    ",
									"    if (responseJson && responseJson.data && responseJson.data.id) {",
									"        pm.collectionVariables.set(\"profile_person_id\", responseJson.data.id);",
									"        console.log(\"Profile Person ID guardado:\", responseJson.data.id);",
									"    } else {",
									"        console.log(\"No se encontr√≥ 'id' en la respuesta JSON.\");",
									"    }",
									"} catch (e) {",
									"    console.error(\"Error al procesar la respuesta JSON:\", e);",
									"}",
									"",
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"identType\": \"CC\",\n    \"identNumber\": \"1234567890\",\n    \"firstName\": \"Juan Carlos\",\n    \"lastName\": \"V√©lez\",\n    \"birthDate\": \"1990-05-15\",\n    \"gender\": \"M\",\n    \"nationality\": \"Colombiana\",\n    \"mobile\": \"3001234567\",\n    \"email\": \"juan.velez@email.com\",\n    \"address\": \"Calle 123 #45-67\",\n    \"city\": \"Bogot√°\",\n    \"country\": \"Colombia\",\n    \"postalCode\": \"110111\",\n    \"notes\": \"Perfil personal para pruebas\",\n    \"isActive\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update My Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Juan Carlos\",\n    \"lastName\": \"V√©lez L√≥pez\",\n    \"email\": \"juan.velez.actualizado@email.com\",\n    \"mobile\": \"3009876543\",\n    \"address\": \"Calle 456 #78-90\",\n    \"city\": \"Medell√≠n\",\n    \"notes\": \"Perfil actualizado con nueva informaci√≥n\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete My Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get My User Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/profile/account",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"profile",
								"account"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update My User Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"juan.velez.actualizado\",\n    \"email\": \"juan.velez.nuevo@email.com\",\n    \"password\": \"NuevaPassword123*\",\n    \"isActive\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/profile/account",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"profile",
								"account"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîß System",
			"item": [
				{
					"name": "Get Roles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/roles",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Roles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "es",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/roles/active",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"roles",
								"active"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "person_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "profile_person_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "client_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "employee_id",
			"value": "",
			"type": "string"
		}
	]
}